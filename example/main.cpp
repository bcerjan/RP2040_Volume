/*
Example Code for using the library, it (roughly) mimics the standard 
tone() function.

Tones generated by this library way are non-blocking, so if you want to play a song
or something you need to manually block between calls.
*/
#include <Arduino.h> // Not strictly required, the library itself is based entirely on
                     // Pico SDK functions and does not depend on Arduino at all
#include "RP2040_Volume.h"

#define SPK_PIN_PLUS    6
#define SPK_PIN_MINUS   7 // Must be same PWM slice as SPK_PIN_PLUS

//#define TONE_ALARM_POOL_HARDWARE_ALARM_NUM XXX // Only needed if you're using the default hardware
                                                 // alarm pool for something already


RP2040_Volume* vol;

void setup() {
  vol = new RP2040_Volume(SPK_PIN_PLUS); // For single-ended audio
  //vol = new RP2040_Volume(SPK_PIN_PLUS, SPK_PIN_MINUS); // For differential audio
}

void loop() {
  vol->tone(440, 25, 1000); // 440 Hz, 25% volume, 1000 ms duration
  //vol->tone(440, 25, 1000, TIME_US); // "" except 1000 us duration
  delay(500);
  vol->stop_tone(); // Stops the currently-playing tone, not required --
                    // tone will stop automatically if given time to play
  delay(1000);
}
